/**
 * @see http://webpack.github.io/docs/configuration.html
 * for webpack configuration options
 */
module.exports = {
  // 'context' sets the directory where webpack looks for module files you list in
  // your 'require' statements
  context: __dirname + '/app/assets/javascripts',

  // 'entry' specifies the entry point, where webpack starts reading all
  // dependencies listed and bundling them into the output file.
  // The entrypoint can be anywhere and named anything - here we are calling it
  // '_application' and storing it in the 'javascripts' directory to follow
  // Rails conventions.
  entry: './app/assets/javascripts/_application.js',

  // 'output' specifies the filepath for saving the bundled output generated by
  // wepback.
  // It is an object with options, and you can interpolate the name of the entry
  // file using '[name]' in the filename.
  // You will want to add the bundled filename to your '.gitignore'.
  output: {
    filename: '[name].bundle.js',
    // We want to save the bundle in the same directory as the other JS.
    path: __dirname + '/app/assets/javascripts',
  }

  // This turns on sourcemaps.
  // @see http://webpack.github.io/docs/configuration.html#devtool
  // Sourcemaps allow you to see the original filename and line numbers rather
  // than the bundled version when debugging with browser devtools.
  devtool: 'eval-source-map',

  // The 'module' and 'loaders' options tell webpack to use loaders.
  // @see http://webpack.github.io/docs/using-loaders.html
  module: {
    // We don't need to parse the React library.
    noParse: [/react\/react\.js/],
    loaders: [
      {
        // Pattern to match only files with the '.js' or '.jsx' extension.
        // This tells the loader to only run for those files.
        test: /\.jsx?$/,
        // Here we are using the 'es6-loader'
        // @see https://github.com/shama/es6-loader
        // It was installed with 'npm install es6-loader --save' and transpiles
        // es6 to es5.
        loader: 'es6-loader'
      }
    ]
  }
};
